--Setting up the environment
ADD JAR /opt/cloudera/parcels/CDH/lib/hive/lib/hive-hcatalog-core-1.1.0-cdh5.11.2.jar;


drop table nyc_taxi_data_pk;

create external table if not exists nyc_taxi_data_pk(VendorID int,tpep_pickup_datetime timestamp,tpep_dropoff_datetime timestamp,Passenger_count int,
Trip_distance double,RateCodeID int,Store_and_fwd_flag string,PULocationID bigint,DOLocationID bigint,Payment_type int,Fare_amount double,Extra double,MTA_tax double,
Tip_amount double,Tolls_amount double,Improvement_surcharge double,Total_amount double)  ROW FORMAT DELIMITED FIELDS TERMINATED BY ','
location '/common_folder/nyc_taxi_data/'
tblproperties ("skip.header.line.count"="1");

select * from nyc_taxi_data_pk;



-- PARTITION THE DATA  
SET hive.exec.max.dynamic.partitions=100000;
SET hive.exec.max.dynamic.partitions.pernode=100000;

-- First drop the table 
drop table nyc_taxi_data_pk_partitioned;

-- Then creating external partitioned ORC table 
create external table if not exists nyc_taxi_data_pk_partitioned
(VendorID int,tpep_pickup_datetime timestamp,tpep_dropoff_datetime timestamp,Passenger_count int,
Trip_distance double,RateCodeID int,Store_and_fwd_flag string,PULocationID bigint,DOLocationID bigint,Payment_type int,Fare_amount double,Extra double,MTA_tax double,
Tip_amount double,Tolls_amount double,Improvement_surcharge double,Total_amount double) partitioned by (mnth int)
stored as orc location '/user/hive/warehouse/nyc_taxi_data_pk_partitioned_orc'
tblproperties ("orc.compress"="SNAPPY");


-- Then insert the data in the table 
insert overwrite table nyc_taxi_data_pk_partitioned partition(mnth)
select VendorID,tpep_pickup_datetime,tpep_dropoff_datetime,Passenger_count,Trip_distance,RateCodeID,Store_and_fwd_flag,PULocationID,DOLocationID,Payment_type,Fare_amount,Extra,MTA_tax,
Tip_amount,Tolls_amount,Improvement_surcharge,Total_amount,  month(tpep_pickup_datetime) as mnth
from nyc_taxi_data_pk;
--Inspecting
select * from nyc_taxi_data_pk_partitioned;


--Basic data quality checks
--1 How many records has each TPEP provider provided? Write a query that summarises the number of records of each provider?
select vendorid,count(*) 
from nyc_taxi_data_pk_partitioned
 group by vendorid;
--- We have 647171 entries for vendorID = 2, and 527386 entries for vendorID = 3


--2 Data quality issues
---checking the number of null values
select count(null) from nyc_taxi_data_pk_partitioned
where mnth in (11,12);

--Inspecting VendorID
select count(*) from nyc_taxi_data_pk_partitioned
where vendorid not in (1,2) and mnth in (11,12);

--Inspecting Passenger count
select count(*) from nyc_taxi_data_pk_partitioned
where passenger_count =0 and mnth in (11,12);
--Passenger_count columns has about 6840 erroneous rows
--Removing the unusual rows
INSERT OVERWRITE TABLE nyc_taxi_data_pk_partitioned partition(mnth)
SELECT * FROM nyc_taxi_data_pk_partitioned
WHERE passenger_count !=0 and mnth in (11,12);

--Inspecting Store_and_fwd_flag
select count(*) from nyc_taxi_data_pk_partitioned
where Store_and_fwd_flag not in ('Y','N') and mnth in (11,12);
--Store_and_fwd_flag does not contain erroneous entries

--Inspecting payment_type
select count(*) from nyc_taxi_data_pk_partitioned
where payment_type not in (1,2,3,4,5,6) and mnth in (11,12);
----payment_type does not contain erroneous entries

--Inspecting Improvement_surcharge
select count(*) from nyc_taxi_data_pk_partitioned
where improvement_surcharge !=0.30 and mnth in (11,12);
--over 800 eroneous data entries
--Removing the unusual rows
INSERT OVERWRITE TABLE nyc_taxi_data_pk_partitioned partition(mnth)
SELECT * FROM nyc_taxi_data_pk_partitioned
WHERE improvement_surcharge =0.30 and mnth in (11,12);

--Inspecting mta_tax
select count(*) from nyc_taxi_data_pk_partitioned
where mta_tax !=0.50 and mnth in (11,12);
--4949 erroneous entries
--Removing the unusual rows
INSERT OVERWRITE TABLE nyc_taxi_data_pk_partitioned partition(mnth)
SELECT * FROM nyc_taxi_data_pk_partitioned
WHERE mta_tax =0.50 and mnth in (11,12);


--Inspecting RateCodeID
select count(*) from nyc_taxi_data_pk_partitioned
where ratecodeid not in (1,2,3,4,5,6) and mnth in (11,12);
----RateCdeID does contain 1 erroneous entry

--Removing the wrong entry row
INSERT OVERWRITE TABLE nyc_taxi_data_pk_partitioned partition(mnth)
SELECT * FROM nyc_taxi_data_pk_partitioned
WHERE ratecodeid in (1,2,3,4,5,6) and mnth in (11,12);

--Inspecting the tip paid and checking if any negative entries exist
select count(*) from nyc_taxi_data_pk_partitioned
where tip_amount<0 and mnth in (11,12);

--Removing the wrong entry rows if exist
INSERT OVERWRITE TABLE nyc_taxi_data_pk_partitioned partition(mnth)
SELECT * FROM nyc_taxi_data_pk_partitioned
WHERE tip_amount>=0 and mnth in (11,12);

--Hence we have removed all the unusual entries and the data is ready for analysis for the 11th and 12th month

--Inspecting the final table 
select * from nyc_taxi_data_pk_partitioned


-- Analysis - 1
--1 Compare the overall average fare per trip for November and December
select mnth,avg(fare_amount)
from nyc_taxi_data_pk_partitioned where mnth in (11,12)
group by mnth
-- Average fare amount for the month November is 12.9 and December is 12.69

--2 Explore the ‘number of passengers per trip’ - how many trips are made by each level of ‘Passenger_count’? Do most people travel solo or with other people?
select passenger_count,count(passenger_count)
from nyc_taxi_data_pk_partitioned
where mnth in (11,12)
group by passenger_count
order by passenger_count

--Result 
--passenger_count	_c1
 
--	1	823445
--	2	175829
--	3	50449
--	4	24791
--	5	54377
--	6	33039
--	7	7
--	8	2
--	9	1
-- Most of the people prefer to travel solo

--3 Which is the most preferred mode of payment?
select payment_type,count(payment_type)
from nyc_taxi_data_pk_partitioned where mnth in (11,12)
group by payment_type
order by payment_type

-- Result
-- 1	781985
-- 2	373006
-- 3	5511
-- 4	1438
-- Most number of people pay using credit cards

--4 Average tip paid per trip
select avg(tip_amount) as average_tip,percentile_approx(tip_amount,0.25) as 25th_percentile,percentile_approx(tip_amount,0.50) as 50th_percentile,
percentile_approx(tip_amount,0.75) as 75th_percentile
from nyc_taxi_data_pk_partitioned
where mnth in (11,12)
-- average_tip	25th_percentile	50th_percentile	75th_percentile
 	
-- 1.8264860750129244  0 	1.3530171609774297	2.448101030024107
-- Average tip was 1.82 and is the correct measure of central tendency

--5 Explore the ‘Extra’ (charge) variable - what fraction of total trips have an extra charge is levied?
select avg(extra) as average_tip,count(extra==0) ,percentile_approx(extra,0.25) as 25th_percentile,percentile_approx(extra,0.50) as 50th_percentile,
percentile_approx(extra,0.75) as 75th_percentile
from nyc_taxi_data_pk_partitioned
where mnth in (11,12)
-- Best central tendency measure is mode


select extra,count(*) from nyc_taxi_data_pk_partitioned where mnth in (11,12) group by extra
-- number of times no charge was levied = 623114
select count(*) as total_trips,(count(*)-623114)/count(*) as fraction
from nyc_taxi_data_pk_partitioned
where mnth in (11,12)
--Thus extra charges were levied 46.3% times


-- Analysis 2
--1  correlation between the number of passengers on any given trip, and the tip paid per trip? 
select corr(passenger_count,tip_amount) as correlation from nyc_taxi_data_pk_partitioned
where mnth in (11,12);
-- (- 0.0038), Solo travellers tend to tip more

--2 Segregate the data into five segments of ‘tip paid’: [0-5), [5-10), [10-15) , [15-20) and >=20. 
-- Calculate the percentage share of each bucket (i.e. the fraction of trips falling in each bucket).
select *,(b.totalwithinrange /1174557) as fraction
from(
select
      case when tip_amount >= 0 and tip_amount < 5    then '  0 - 5'
           when tip_amount >= 5 and tip_amount < 10   then ' 5 - 10'
           when tip_amount >= 10 and tip_amount < 15  then ' 10 - 15'
           when tip_amount>=15 and tip_amount <20 then '15-20'
           else '>=20'
      end as tip_range,
      count(*) as TotalWithinRange
   from nyc_taxi_data_pk_partitioned
   where mnth in (11,12)
      
   group by 
        case when tip_amount >= 0 and tip_amount < 5    then '  0 - 5'
           when tip_amount >= 5 and tip_amount < 10   then ' 5 - 10'
           when tip_amount >= 10 and tip_amount < 15  then ' 10 - 15'
           when tip_amount>=15 and tip_amount <20 then '15-20'
           else '>=20'
        end)b;   
        

--3 Which month has a greater average ‘speed’ - November or December? 
select mnth,avg(trip_distance/(((Hour(tpep_dropoff_datetime)*60)+Minute(tpep_dropoff_datetime)+(Second(tpep_dropoff_datetime)/60))-
((Hour(tpep_pickup_datetime)*60)+Minute(tpep_pickup_datetime)+(Second(tpep_pickup_datetime)/60))))
from nyc_taxi_data_pk_partitioned
where mnth in (11,12)
group by mnth;
--Result
-- 12	0.17971403008621822 miles/minute
-- 11	0.17851465639772818 miles/minute

--4 Analyse the average speed of the most happening days of the year
select avg(trip_distance/(((Hour(tpep_dropoff_datetime)*60)+Minute(tpep_dropoff_datetime)+(Second(tpep_dropoff_datetime)/60))-
((Hour(tpep_pickup_datetime)*60)+Minute(tpep_pickup_datetime)+(Second(tpep_pickup_datetime)/60)))) as avg_speed_on_happening_day
from nyc_taxi_data_pk_partitioned where mnth in (12) and day(tpep_pickup_datetime) in(25,31);
-- Result 0.22 miles/minute

-- Comparing it with overall avg
select avg(trip_distance/(((Hour(tpep_dropoff_datetime)*60)+Minute(tpep_dropoff_datetime)+(Second(tpep_dropoff_datetime)/60))-
((Hour(tpep_pickup_datetime)*60)+Minute(tpep_pickup_datetime)+(Second(tpep_pickup_datetime)/60)))) as overall_avg
from nyc_taxi_data_pk_partitioned
where mnth in (11,12)
-- Result 0.179 miles/minute

--Thus the cabs are generally faster on 25th december and 31st december